
name: Python (Windows)
run-name: Python Jobs (Windows)

on:
  
  schedule:
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
    - cron:  '11 1  *  *  MON'
          #   │  │  │  │  │
          #   │  │  │  │  └─── day of the week  (0–6, SUN-SAT)
          #   │  │  │  └────── month            (1–12)
          #   │  │  └───────── day of the month (1–31)
          #   │  └──────────── hour             (0–23)
          #   └─────────────── minute           (0–59)

  push:
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#push
    branches:
      - 'main'
    paths:
      - 'Python/**.*'

  workflow_dispatch:

jobs:
  
  Get-Download-URL:
    
    runs-on: ubuntu-22.04
      ## https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners#standard-github-hosted-runners-for-public-repositories
      ## https://github.com/actions/runner-images/blob/main/images/ubuntu/Ubuntu2204-Readme.md
    outputs:
      url  : ${{ steps.url-list.outputs.url }}
      file : ${{ steps.url-list.outputs.file }}
        ## https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs

    steps:
      
      - name: Checkout
        uses: actions/checkout@v4
          ## https://github.com/actions/checkout

      - name: Run Pre-Check Scripts
        working-directory: ./Python/
        run: |
          bash Script/Bash/test.sh

      - name: Get URL List - Simple Version
        id  : url-list
        working-directory: ./Python/
        run: |
          bash Script/Bash/get_download_url.sh |
          tee >(
            head --lines=1 |
            (read -r line && echo "url=${line}") >> "${GITHUB_OUTPUT}"
          ) >(
            head --lines=1 |
            (read -r line && echo "file=${line##*/}") >> "${GITHUB_OUTPUT}"
          )
  
  Get-Python:

    runs-on: windows-2022
      ## https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners#standard-github-hosted-runners-for-public-repositories
      ## https://github.com/actions/runner-images/blob/main/images/windows/Windows2022-Readme.md

    needs: Get-Download-URL
    steps:

      - name: Checkout
        uses: actions/checkout@v4
          ## https://github.com/actions/checkout
        
      - name: Run Pre-Check Scripts
        working-directory: .\Python\
        shell: cmd
          ## https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#defaultsrunshell
        run: |
          Script\CMD\test.cmd

      - name: Download Python Package
        env:
          URL_DONWLOAD : ${{needs.Get-Download-URL.outputs.url}}
          FILE_NAME    : ${{needs.Get-Download-URL.outputs.file}}
        working-directory: .\Python\
        shell: cmd
          ## https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#defaultsrunshell
        run: |
          download_python.cmd

      - name: Unzip Python Package
        working-directory: .\Python\
        shell: cmd
          ## https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#defaultsrunshell
        run: |
          Python\unzip_python.cmd

      - name: Prepare PATH Configuration
        working-directory: .\Python\
        shell: cmd
          ## https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#defaultsrunshell
        run: |
          Python\config_python.cmd

      - name: Test PATH Configuration
        working-directory: .\Python\
        shell: cmd
          ## https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#defaultsrunshell
        run: |
          SET "PYTHON_CONFIG=Python\PATH.txt"
          SET /P PATH_PYTHON= < "%PYTHON_CONFIG%"
          IF NOT EXIST "%PATH_PYTHON%\python.exe" (
            ECHO python.exe not found
            EXIT /B 1
          )
          SET "PATH=%PATH_PYTHON%;%PATH%"

          REM Run Test Scripts
          Script\CMD\test.cmd

      - name: Run Task
        working-directory: .\Python\
        shell: cmd
          ## https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#defaultsrunshell
        run: |
          run.cmd

      - name: Configure Python PATH (Persistence)
        working-directory: .\Python\
        shell: cmd
          ## https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#defaultsrunshell
        run: |
          SET "PYTHON_CONFIG=Python\PATH.txt"
          SET /P PATH_PYTHON= < "%PYTHON_CONFIG%"
          IF NOT EXIST "%PATH_PYTHON%\python.exe" (
            ECHO python.exe not found
            EXIT /B 1
          )
          IF NOT DEFINED GITHUB_ENV (
            ECHO not in a github action environment
            EXIT /B 1
          )
          ECHO PATH_PYTHON=%PATH_PYTHON%>> "%GITHUB_ENV%"
          ECHO PATH=%PATH_PYTHON%;%PATH%>> "%GITHUB_ENV%"
          TYPE %GITHUB_ENV%

      - name: Check After Python PATH Persistence
        working-directory: .\Python\
        shell: cmd
          ## https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#defaultsrunshell
        run: |
          Script\CMD\test.cmd

      - name: Upload Artifact - PythonTool
        uses: actions/upload-artifact@v4
          ## https://github.com/actions/upload-artifact
        with:
          name: PythonTool
          path: |
            Python/*Python/python-*.zip
            Python/*Python/*.cmd
          compression-level: 0

      - name: Upload Artifact - PythonTool with DEMO
        uses: actions/upload-artifact@v4
          ## https://github.com/actions/upload-artifact
        with:
          name: PythonToolWitDEMO
          path: |
            Python/*Python/python-*.zip
            Python/*Python/*.cmd
            Python/*run*.cmd
            Python/*Script/Python/*.py
            Python/*CSV/*/*.csv

